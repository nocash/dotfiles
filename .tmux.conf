# vim:ft=tmux

# prefix
unbind-key C-b
set-option -g prefix C-q
bind-key C-q send-prefix

# behavior options
set-option -g base-index 1
set-option -g default-terminal xterm-256color
set-option -g history-limit 100000
set-option -g status-keys vi
set-option -sg escape-time 0
set-option -g mouse on
set-window-option -g aggressive-resize on
set-window-option -g automatic-rename on
set-window-option -g mode-keys vi
set-window-option -g monitor-activity off
set-window-option -g window-status-current-bg blue
set-window-option -g xterm-keys on

# color options
set-option -g pane-active-border-bg black
set-option -g pane-active-border-fg cyan
set-option -g pane-border-bg black
set-option -g pane-border-fg cyan
set-option -g status-bg black
set-option -g status-fg white

# session management
bind-key C-c new-session

# select windows
bind-key C-n next-window
bind-key C-p previous-window
bind-key C-w last-window

# use current path when creating new windows
bind-key c new-window -c "#{pane_current_path}"

# vim's definition of a horizontal/vertical split is reversed from tmux's
bind-key '"' split-window -v -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# resize panes like vim
bind-key -r < resize-pane -L 2
bind-key -r > resize-pane -R 2
bind-key -r - resize-pane -D 2
bind-key -r + resize-pane -U 2

# toggle tmux status bar
bind-key b set-option status

# lock session
set-option -g lock-command vlock
bind-key l lock-session

# share buffers with system clipboard (osx)
# requires reattach-to-user-namespace (https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard)
if-shell 'hash reattach-to-user-namespace' \
  'set-option -g default-command "reattach-to-user-namespace -l $SHELL" ; \
  bind-key C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy" ; \
  bind-key C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer" ; \
  unbind-key -T copy-mode-vi Enter ; \
  unbind-key -T copy-mode Enter ; \
  bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" ; \
  bind-key -T copy-mode Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'

# reload .tmux.conf
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

if-shell '[ -s "~/.tmux.conf.local" ]' \
  'source-file ~/.tmux.conf.local'
